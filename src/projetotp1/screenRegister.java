package projetotp1;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Date;
import javax.swing.JOptionPane;

// Classe do componente da tela de cadastro
public class screenRegister extends javax.swing.JFrame {

  public screenRegister() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
  private void initComponents() {

    dashboard = new javax.swing.JPanel();
    menuRegion = new javax.swing.JPanel();
    iconRegion = new javax.swing.JPanel();
    returnButton = new javax.swing.JButton();
    registerRegion = new javax.swing.JPanel();
    userText = new javax.swing.JLabel();
    inputUser = new javax.swing.JTextField();
    emailText = new javax.swing.JLabel();
    inputEmail = new javax.swing.JTextField();
    passwordText = new javax.swing.JLabel();
    inputPassword = new javax.swing.JPasswordField();
    confirmPasswordText = new javax.swing.JLabel();
    inputConfirmPassword = new javax.swing.JPasswordField();
    loginButton = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();

    setSize(new java.awt.Dimension(800, 500));

    dashboard.setPreferredSize(new java.awt.Dimension(400, 500));
    dashboard.setSize(new java.awt.Dimension(400, 500));
    dashboard.setLayout(new java.awt.BorderLayout());

    menuRegion.setBackground(new java.awt.Color(1, 21, 38));
    menuRegion.setPreferredSize(new java.awt.Dimension(400, 50));
    menuRegion.setLayout(new java.awt.BorderLayout());

    iconRegion.setBackground(new java.awt.Color(1, 21, 38));
    iconRegion.setPreferredSize(new java.awt.Dimension(75, 50));
    iconRegion.setSize(new java.awt.Dimension(75, 50));

    returnButton.setBackground(new java.awt.Color(1, 21, 38));
    returnButton.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
    returnButton.setForeground(new java.awt.Color(150, 179, 217));
    returnButton.setText("< LOGIN");
    returnButton.setBorder(null);
    returnButton.setBorderPainted(false);
    returnButton.setContentAreaFilled(false);
    returnButton.setFocusPainted(false);
    returnButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        returnButtonMouseClicked(evt);
      }
    });
    returnButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        returnButtonActionPerformed(evt);
      }
    });
    iconRegion.add(returnButton);

    menuRegion.add(iconRegion, java.awt.BorderLayout.LINE_START);

    dashboard.add(menuRegion, java.awt.BorderLayout.PAGE_START);

    registerRegion.setBackground(new java.awt.Color(1, 21, 38));

    userText.setFont(new java.awt.Font("Cambay Devanagari", 1, 14)); // NOI18N
    userText.setForeground(new java.awt.Color(255, 255, 255));
    userText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    userText.setText("USERNAME ");

    inputUser.setBackground(new java.awt.Color(1, 34, 53));
    inputUser.setFont(new java.awt.Font("Andale Mono", 0, 14)); // NOI18N
    inputUser.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    inputUser.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        inputUserActionPerformed(evt);
      }
    });

    emailText.setFont(new java.awt.Font("Cambay Devanagari", 1, 14)); // NOI18N
    emailText.setForeground(new java.awt.Color(255, 255, 255));
    emailText.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    emailText.setText("EMAIL");

    inputEmail.setBackground(new java.awt.Color(1, 34, 53));
    inputEmail.setFont(new java.awt.Font("Andale Mono", 0, 14)); // NOI18N
    inputEmail.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    inputEmail.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        inputEmailActionPerformed(evt);
      }
    });

    passwordText.setFont(new java.awt.Font("Cambay Devanagari", 1, 14)); // NOI18N
    passwordText.setForeground(new java.awt.Color(255, 255, 255));
    passwordText.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    passwordText.setText("PASSWORD ");

    inputPassword.setBackground(new java.awt.Color(1, 34, 53));
    inputPassword.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

    confirmPasswordText.setFont(new java.awt.Font("Cambay Devanagari", 1, 14)); // NOI18N
    confirmPasswordText.setForeground(new java.awt.Color(255, 255, 255));
    confirmPasswordText.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    confirmPasswordText.setText("CONFIRM PASSWORD ");

    inputConfirmPassword.setBackground(new java.awt.Color(1, 34, 53));
    inputConfirmPassword.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

    loginButton.setBackground(new java.awt.Color(150, 179, 217));
    loginButton.setFont(new java.awt.Font("Cambay Devanagari", 1, 14)); // NOI18N
    loginButton.setForeground(new java.awt.Color(1, 21, 38));
    loginButton.setText("REGISTER");
    loginButton.setFocusPainted(false);
    loginButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        loginButtonMouseClicked(evt);
      }
    });

    jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ticket (1).png"))); // NOI18N

    javax.swing.GroupLayout registerRegionLayout = new javax.swing.GroupLayout(registerRegion);
    registerRegion.setLayout(registerRegionLayout);
    registerRegionLayout.setHorizontalGroup(
            registerRegionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerRegionLayout.createSequentialGroup()
                            .addGap(0, 125, Short.MAX_VALUE)
                            .addGroup(registerRegionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(inputUser, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(inputEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(inputConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(inputPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, registerRegionLayout.createSequentialGroup()
                                            .addGap(2, 2, 2)
                                            .addComponent(userText))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, registerRegionLayout.createSequentialGroup()
                                            .addGap(0, 0, 0)
                                            .addComponent(passwordText))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, registerRegionLayout.createSequentialGroup()
                                            .addGap(0, 0, 0)
                                            .addComponent(confirmPasswordText))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, registerRegionLayout.createSequentialGroup()
                                            .addGap(2, 2, 2)
                                            .addComponent(emailText)))
                            .addGap(125, 125, 125))
    );
    registerRegionLayout.setVerticalGroup(
            registerRegionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerRegionLayout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(userText)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(inputUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(emailText)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(inputEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(passwordText)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(inputPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(confirmPasswordText)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(inputConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(loginButton)
                            .addGap(47, 47, 47))
    );

    dashboard.add(registerRegion, java.awt.BorderLayout.PAGE_END);

    getContentPane().add(dashboard, java.awt.BorderLayout.PAGE_START);

    pack();
  }// </editor-fold>                        // </editor-fold>                        

    private void loginButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseClicked
      if (inputEmail.getText().equals("") || inputUser.getText().equals("")) {
        JOptionPane.showMessageDialog(null, "Todos os campos devem ser inseridos!", "Mensagem", JOptionPane.PLAIN_MESSAGE);
      } else if (inputPassword.getPassword().length < 6) {
        JOptionPane.showMessageDialog(null, "A senha deverá ter no mínimo 6 caracteres!", "Mensagem", JOptionPane.PLAIN_MESSAGE);
      } else if (!Arrays.toString(inputPassword.getPassword()).equals(Arrays.toString(inputConfirmPassword.getPassword()))) {
        JOptionPane.showMessageDialog(null, "As senhas devem coincidir!", "Mensagem", JOptionPane.PLAIN_MESSAGE);
      } else {
        String user = inputUser.getText();
        String email = inputEmail.getText();
        String senha = Arrays.toString(inputPassword.getPassword());

        try (BufferedReader buffRead = new BufferedReader(new FileReader("users.txt"))) {
          String linha;
          String[] dados;

          while (true) {
            linha = buffRead.readLine();
            if (linha != null) {
              dados = linha.split(";");

              if (dados[0].equals(user)) {
                JOptionPane.showMessageDialog(null, "Usuário já existe!", "Ocorreu um erro", JOptionPane.PLAIN_MESSAGE);
                return;
              }

              if (dados[1].equals(email)) {
                JOptionPane.showMessageDialog(null, "E-mail já existe!", "Ocorreu um erro", JOptionPane.PLAIN_MESSAGE);
                return;
              }
            } else {
              break;
            }
          }

          buffRead.close();

        } catch (IOException erro) {
          System.out.println(erro.getMessage());

          JOptionPane.showMessageDialog(null, "Não foi possível obter informações dos usuários!", "Ocorreu um erro", JOptionPane.PLAIN_MESSAGE);
        }

        try {
          try (BufferedWriter buffWrite = new BufferedWriter(new FileWriter("users.txt", true))) {
            buffWrite.append(user + ";" + email + ";" + senha + ";" + new Date().getTime() + "\n");
            buffWrite.close();
          }
        } catch (IOException erro) {
          System.out.println(erro.getMessage());
          JOptionPane.showMessageDialog(null, "Não foi possível realizar o cadastro!", "Ocorreu um erro", JOptionPane.PLAIN_MESSAGE);
        }

        JOptionPane.showMessageDialog(null, "Usuário cadastrado com sucesso!", "Mensagem", JOptionPane.PLAIN_MESSAGE);

        inputUser.setText("");
        inputEmail.setText("");
        inputPassword.setText("");
        inputConfirmPassword.setText("");
      }
    }//GEN-LAST:event_loginButtonMouseClicked

    private void inputUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputUserActionPerformed
      // TODO add your handling code here:
    }//GEN-LAST:event_inputUserActionPerformed

    private void inputEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputEmailActionPerformed
      // TODO add your handling code here:
    }//GEN-LAST:event_inputEmailActionPerformed

  private void returnButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnButtonMouseClicked
    // TODO add your handling code here:
    this.setVisible(false);
  }//GEN-LAST:event_returnButtonMouseClicked

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
      // TODO add your handling code here:
    }//GEN-LAST:event_returnButtonActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(screenRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(screenRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(screenRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(screenRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(() -> {
      new screenRegister().setVisible(true);
    });
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel confirmPasswordText;
    private javax.swing.JPanel dashboard;
    private javax.swing.JLabel emailText;
    private javax.swing.JPanel iconRegion;
    private javax.swing.JPasswordField inputConfirmPassword;
    private javax.swing.JTextField inputEmail;
    private javax.swing.JPasswordField inputPassword;
    private javax.swing.JTextField inputUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton loginButton;
    private javax.swing.JPanel menuRegion;
    private javax.swing.JLabel passwordText;
    private javax.swing.JPanel registerRegion;
    private javax.swing.JButton returnButton;
    private javax.swing.JLabel userText;
    // End of variables declaration//GEN-END:variables
}
