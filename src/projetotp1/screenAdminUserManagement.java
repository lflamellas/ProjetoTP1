/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetotp1;

import classes.Usuario;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lflamellas
 */
public class screenAdminUserManagement extends javax.swing.JFrame {

    /**
     * Creates new form screenAdminMenu
     */
  
    static ArrayList<Usuario> listaDeUsuarios;
  
    public screenAdminUserManagement() {
      initComponents();
      
      listaDeUsuarios = new ArrayList();
      
      editButton.setEnabled(false);
      deleteButton.setEnabled(false);
      
      pegarUsuariosDoArquivo();
      carregarTabelaUsuarios();
    }
    
    private void carregarTabelaUsuarios() {
      DefaultTableModel modelo = new DefaultTableModel(new Object[] {"Usename", "E-mail", "Register Date"}, 0);
      
      for (int i = 0; i < listaDeUsuarios.size(); i++) {
          Object linha[] = new Object[] {
          listaDeUsuarios.get(i).getUsername(),
          listaDeUsuarios.get(i).getEmail(),
          listaDeUsuarios.get(i).getDataDeCriacao(),
        };
        modelo.addRow(linha);
      }
      
      usersTable.setModel(modelo);
    }
    
    public static void pegarUsuariosDoArquivo() {
      try (BufferedReader buffRead = new BufferedReader(new FileReader("users.txt"))) {
        String linha;
        String[] dados;
        
        String username;
        String email;
        String password;
        Date dataDeCriacao;
          
        while (true) {
          linha = buffRead.readLine();
          if (linha != null) {
            dados = linha.split(";");
            username = dados[0];
            email = dados[1];
            password = dados[2];
            dataDeCriacao = new Date();
            dataDeCriacao.setTime(Long.parseLong(dados[3]));
            
            Usuario usuario = new Usuario(username, email, password, dataDeCriacao);
            
            listaDeUsuarios.add(usuario);
          } else {
            break;
          }
        }
          
        buffRead.close();
        
      } catch (IOException erro) {
          System.out.println(erro.getMessage());
          
          JOptionPane.showMessageDialog(null, "Não foi possível obter informações dos usuários!", "Ocorreu um erro", JOptionPane.PLAIN_MESSAGE);
        }
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    dashboard = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    usersTable = new javax.swing.JTable();
    addButton = new javax.swing.JButton();
    editButton = new javax.swing.JButton();
    deleteButton = new javax.swing.JButton();
    usernameLabel = new javax.swing.JLabel();
    emailLabel = new javax.swing.JLabel();
    passwordLabel = new javax.swing.JLabel();
    confirmPasswordLabel = new javax.swing.JLabel();
    inputUsername = new javax.swing.JTextField();
    inputEmail = new javax.swing.JTextField();
    inputPassword = new javax.swing.JTextField();
    inputConfirmPassword = new javax.swing.JTextField();
    pageIcon = new javax.swing.JLabel();
    menu = new javax.swing.JPanel();
    leftRegion = new javax.swing.JPanel();
    backIcon = new javax.swing.JLabel();
    rightRegion = new javax.swing.JPanel();
    exitIcon1 = new javax.swing.JLabel();

    dashboard.setBackground(new java.awt.Color(39, 40, 64));
    dashboard.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, null), "USERS MANAGEMENT", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N

    usersTable.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {"Caio", "caio@unb.br", "25/11/2020"},
        {"Luis Fernando", "lf@unb.br", "25/11/2020"},
        {null, null, null},
        {null, null, null},
        {null, null, null}
      },
      new String [] {
        "Username", "E-mail", "Register Date"
      }
    ) {
      Class[] types = new Class [] {
        java.lang.String.class, java.lang.String.class, java.lang.Object.class
      };

      public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
      }
    });
    jScrollPane1.setViewportView(usersTable);
    if (usersTable.getColumnModel().getColumnCount() > 0) {
      usersTable.getColumnModel().getColumn(0).setResizable(false);
      usersTable.getColumnModel().getColumn(1).setResizable(false);
      usersTable.getColumnModel().getColumn(2).setResizable(false);
    }

    addButton.setText("Add");
    addButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        addButtonActionPerformed(evt);
      }
    });

    editButton.setText("Edit");
    editButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        editButtonActionPerformed(evt);
      }
    });

    deleteButton.setText("Delete");
    deleteButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        deleteButtonActionPerformed(evt);
      }
    });

    usernameLabel.setForeground(new java.awt.Color(255, 255, 255));
    usernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    usernameLabel.setText("Username");

    emailLabel.setForeground(new java.awt.Color(255, 255, 255));
    emailLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    emailLabel.setText("Email");

    passwordLabel.setForeground(new java.awt.Color(255, 255, 255));
    passwordLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    passwordLabel.setText("Password");

    confirmPasswordLabel.setForeground(new java.awt.Color(255, 255, 255));
    confirmPasswordLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    confirmPasswordLabel.setText("Confirm Password");

    pageIcon.setForeground(new java.awt.Color(255, 255, 255));
    pageIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    pageIcon.setText("ICON");
    pageIcon.setPreferredSize(new java.awt.Dimension(128, 128));

    javax.swing.GroupLayout dashboardLayout = new javax.swing.GroupLayout(dashboard);
    dashboard.setLayout(dashboardLayout);
    dashboardLayout.setHorizontalGroup(
      dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboardLayout.createSequentialGroup()
        .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(dashboardLayout.createSequentialGroup()
            .addGap(49, 49, 49)
            .addComponent(addButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(editButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(deleteButton))
          .addGroup(dashboardLayout.createSequentialGroup()
            .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(usernameLabel)
              .addComponent(emailLabel)
              .addComponent(passwordLabel)
              .addComponent(confirmPasswordLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(inputUsername)
              .addComponent(inputEmail)
              .addComponent(inputConfirmPassword)
              .addComponent(inputPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)))
          .addGroup(dashboardLayout.createSequentialGroup()
            .addGap(87, 87, 87)
            .addComponent(pageIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    dashboardLayout.setVerticalGroup(
      dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(dashboardLayout.createSequentialGroup()
        .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
          .addGroup(dashboardLayout.createSequentialGroup()
            .addGap(22, 22, 22)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(dashboardLayout.createSequentialGroup()
            .addGap(37, 37, 37)
            .addComponent(pageIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(usernameLabel)
              .addComponent(inputUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(emailLabel)
              .addComponent(inputEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(passwordLabel)
              .addComponent(inputPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(confirmPasswordLabel)
              .addComponent(inputConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(addButton)
              .addComponent(editButton)
              .addComponent(deleteButton))))
        .addContainerGap(13, Short.MAX_VALUE))
    );

    getContentPane().add(dashboard, java.awt.BorderLayout.CENTER);

    menu.setBackground(new java.awt.Color(39, 40, 64));
    menu.setPreferredSize(new java.awt.Dimension(800, 50));
    menu.setLayout(new java.awt.BorderLayout());

    leftRegion.setBackground(new java.awt.Color(39, 40, 64));
    leftRegion.setPreferredSize(new java.awt.Dimension(50, 50));

    backIcon.setForeground(new java.awt.Color(255, 255, 255));
    backIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    backIcon.setText("ICON");
    backIcon.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        backIconMouseClicked(evt);
      }
    });

    javax.swing.GroupLayout leftRegionLayout = new javax.swing.GroupLayout(leftRegion);
    leftRegion.setLayout(leftRegionLayout);
    leftRegionLayout.setHorizontalGroup(
      leftRegionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(leftRegionLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(backIcon)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    leftRegionLayout.setVerticalGroup(
      leftRegionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(leftRegionLayout.createSequentialGroup()
        .addGap(14, 14, 14)
        .addComponent(backIcon)
        .addContainerGap(20, Short.MAX_VALUE))
    );

    menu.add(leftRegion, java.awt.BorderLayout.LINE_START);

    rightRegion.setBackground(new java.awt.Color(39, 40, 64));
    rightRegion.setPreferredSize(new java.awt.Dimension(50, 50));

    exitIcon1.setForeground(new java.awt.Color(255, 255, 255));
    exitIcon1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    exitIcon1.setText("ICON");
    exitIcon1.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        exitIcon1MouseClicked(evt);
      }
    });

    javax.swing.GroupLayout rightRegionLayout = new javax.swing.GroupLayout(rightRegion);
    rightRegion.setLayout(rightRegionLayout);
    rightRegionLayout.setHorizontalGroup(
      rightRegionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(rightRegionLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(exitIcon1)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    rightRegionLayout.setVerticalGroup(
      rightRegionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(rightRegionLayout.createSequentialGroup()
        .addGap(14, 14, 14)
        .addComponent(exitIcon1)
        .addContainerGap(20, Short.MAX_VALUE))
    );

    menu.add(rightRegion, java.awt.BorderLayout.LINE_END);

    getContentPane().add(menu, java.awt.BorderLayout.PAGE_START);

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void backIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backIconMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_backIconMouseClicked

    private void exitIcon1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitIcon1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_exitIcon1MouseClicked

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(screenAdminUserManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(screenAdminUserManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(screenAdminUserManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(screenAdminUserManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new screenAdminUserManagement().setVisible(true);
            }
        });
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton addButton;
  private javax.swing.JLabel backIcon;
  private javax.swing.JLabel confirmPasswordLabel;
  private javax.swing.JPanel dashboard;
  private javax.swing.JButton deleteButton;
  private javax.swing.JButton editButton;
  private javax.swing.JLabel emailLabel;
  private javax.swing.JLabel exitIcon1;
  private javax.swing.JTextField inputConfirmPassword;
  private javax.swing.JTextField inputEmail;
  private javax.swing.JTextField inputPassword;
  private javax.swing.JTextField inputUsername;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JPanel leftRegion;
  private javax.swing.JPanel menu;
  private javax.swing.JLabel pageIcon;
  private javax.swing.JLabel passwordLabel;
  private javax.swing.JPanel rightRegion;
  private javax.swing.JLabel usernameLabel;
  private javax.swing.JTable usersTable;
  // End of variables declaration//GEN-END:variables
}
